/* Media mixins */
$lg: 1200px;
$md-top: 1199px;
$md: 768px;
$xs: 767px;

@mixin lg {
  @media (min-width: #{$lg}) {
    @content
  }
}
@mixin md {
  @media (min-width: #{$md}) and (max-width: #{$md-top}) {
    @content
  }
}
@mixin xs {
  @media (max-width: #{$xs}) {
    @content
  }
}

// BEM modifier() mixin
@mixin modifier($name) {
  @at-root {
    // '&' is a double-wrapped list
    $selector: nth(&, 1);
    // direct parent will be the last item in that list
    $direct-parent: nth($selector, length($selector));
    // modifier should have all properties of parent
    #{$direct-parent}--#{$name} {
      @extend #{$direct-parent};
    }
    // '@content' will be in a nested selector however, if that is the context
    #{&}--#{$name} {
      @content
    }
  }
}

// BEM element() mixin--as has been seen elsewhere
@mixin element($name) {
  @at-root {
    #{&}-#{$name} {
      @content
    }
  }
}

@mixin position($position, $top, $right, $bottom, $left, $z-index: 0) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  @if ($z-index != 0) {
    z-index: $z-index;
  }
}

